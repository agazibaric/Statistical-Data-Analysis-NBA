plot(ss[ss$FTA > 50 & ss$X3PA > 50, c("FT.")], ss[ss$FTA > 50 & ss$X3PA > 50, c("X3P.")], cex=0.1, xlab="FT%", ylab="3P%")
plot(ss[ss$FTA > 50 & ss$X3PA > 50, c("X3P.")], ss[ss$FTA > 50 & ss$X3PA > 50, c("FT.")], cex=0.1, xlab="3P%", ylab="FT%")
plot(seasonsStats$X3P., seasonsStats$X3PA, cex=0.1, xlab="3P%", ylab="3PA")
threePercentages <- ss[ss$FTA > 50 & ss$X3PA > 50, c("X3P.")]
freeThrowPercentages <- ss[ss$FTA > 50 & ss$X3PA > 50, c("FT.")]
lm.r <- lm(threePercentages ~ freeThrowPercentages)
plot(threePercentages, freeThrowPercentages, cex=0.1, xlab="3P%", ylab="FT%")
abline(lm.r, color="red")
plot(threePercentages, freeThrowPercentages, cex=0.1, xlab="3P%", ylab="FT%")
abline(lm.r, col="red")
threePercentages <- ss[ss$FTA > 50 & ss$X3PA > 50, c("X3P.")]
freeThrowPercentages <- ss[ss$FTA > 50 & ss$X3PA > 50, c("FT.")]
lm.r <- lm(threePercentages ~ freeThrowPercentages)
lm.r <- lm(freeThrowPercentages ~ threePercentages)
plot(threePercentages, freeThrowPercentages, cex=0.1, xlab="3P%", ylab="FT%")
abline(lm.r, col="red")
qqnorm(rstandard(lm.r))
qqline(rstandard(lm.r))
ss
ssWithHeight <- data.frame(matrix(ncol=length(names(ss)), nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s$Player
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[pl$name == name]
ssWithHeight <- rbind(ss, c(s, player$height))
}
for (s in ss) {
names(s)
name <- s$Player
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[pl$name == name]
ssWithHeight <- rbind(ss, c(s, player$height))
}
for (s in ss) {
print(names(s))
name <- s$Player
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[pl$name == name]
ssWithHeight <- rbind(ss, c(s, player$height))
}
ss
ss[0]
ss[1]
ss[2]
ss[3]
players
players[3]
players[2]
players[5]
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[pl$name == name]
ssWithHeight <- rbind(ss, c(s, player[5]))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[pl$name == name]
ssWithHeight <- rbind(ss, c(s, player$height))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name]
ssWithHeight <- rbind(ss, c(s, player$height))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ss, c(s, player$height))
}
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ss, c(s, player$height))
}
ssWithHeight
names(ssWithHeight)
names(ssWithHeight)
c(names(ss), "height")
names(ssWithHeight)
names(ssWithHeight)
names(ssWithHeight) <- c(names(ss), "height")
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
names(ssWithHeight)
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ssWithHeight, c(s, player$height))
}
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ssWithHeight, c(s, player$height))
}
ssWithHeight
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
player
break
ssWithHeight <- rbind(ssWithHeight, c(s, player$height))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
print(player)
break
ssWithHeight <- rbind(ssWithHeight, c(s, player$height))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
name <- s[3]
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ssWithHeight, data.frame(c(s, height=player$height)))
}
ssWithHeight
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
names(s) <- names(ss)
name <- s$Player
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ssWithHeight, data.frame(c(s, height=player$height[1])))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
s <- data.frame(setNames(s, names(ss)))
name <- s$Player
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ssWithHeight, data.frame(c(s, height=player$height[1])))
}
ssWithHeight <- data.frame(matrix(ncol=length(names(ss))+1, nrow=0))
names(ssWithHeight) <- c(names(ss), "height")
for (s in ss) {
s <- data.frame(setNames(s, names(ss)))
print(s)
break
name <- s$Player
if (grepl("\\*", name)) {
name <- substr(name, 1, nchar(name)-1)
}
if (name %in% sameNamePlayers$name) {
next
}
player <- pl[as.character(pl$name) == name, ]
ssWithHeight <- rbind(ssWithHeight, data.frame(c(s, height=player$height[1])))
}
source("util.r")
removeAsterisk(ss)
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
ss
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
ss <- seasonsStats
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
str(seasonsStats)
players <- read.csv(file="data/players.csv", header=TRUE, sep=",")
source("util.r")
players <- read.csv(file="data/players.csv", header=TRUE, sep=",")
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
players <- preparePlayerData(players)
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
source("util.r")
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
ss
source("util.r")
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
ss <- seasonsStats
ss
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
source("util.r")
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
ss <- seasonsStats
ss
source("util.r")
seasonsStats <- read.csv(file="data/seasons_stats.csv", header=TRUE, sep=",")
seasonsStats <- prepareSeasonsStatsData(seasonsStats, players)
ss <- seasonsStats
ss
ss[ss$Player == "Michael Jordan", ]
merge(ss, pl, by.x="Player", by.y="name")
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged[merged$Player == "Larry Nance", ]
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged
merged[merged$Player == "Larry Nance", ]
names <- unique(merged$Player)
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged$height[merged$Player == name, ])
threes[i] <- sum(merged$X3P.[merged$Player == name, ])
}
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3P.), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged$height[merged$Player == name, ])
threes[i] <- sum(merged$X3P.[merged$Player == name, ])
}
merged$height[merged$Player == "Michael Jordan", ]
merged[merged$Player == "Michael Jordan", ]
merged[merged$Player == "Michael Jordan", c("height")]
merged$height[merged$Player == name, ]
length(merged$height)
length(merged$Player == "Michael Jordan")
merged$height[merged$Player == name, ]
length(merged$height)
length(merged$Player == "Michael Jordan")
merged$Player == "Michael Jordan"
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3P.), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("X3P.")])
}
plot(heights, threes)
plot(heights, threes, cex=0.1)
plot(1/heights, threes, cex=0.1)
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3PA), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("X3PA")])
}
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("X3PA")])
}
uniqueHeights <- unique(heights)
uniqueThrees <- rep(0, length(uniqueHeights))
for (i in 1:length(uniqueHeights)) {
height <- heights[i]
nPlayers <- length(heights[heights == height])
totalThrees <- sum(threes[heights == height])
uniqueThrees[i] <- totalThrees / nPlayers
}
plot(uniqueHeights, uniqueThrees, cex=0.1)
plot(uniqueHeights, uniqueThrees, cex=0.3)
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3P.), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("X3P.")])
}
uniqueHeights <- unique(heights)
uniqueThrees <- rep(0, length(uniqueHeights))
for (i in 1:length(uniqueHeights)) {
height <- heights[i]
nPlayers <- length(heights[heights == height])
totalThrees <- sum(threes[heights == height])
uniqueThrees[i] <- totalThrees / nPlayers
}
plot(uniqueHeights, uniqueThrees, cex=0.3)
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3P.), ]
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3P.), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- mean(merged[merged$Player == name, c("X3P.")])
}
uniqueHeights <- unique(heights)
uniqueThrees <- rep(0, length(uniqueHeights))
for (i in 1:length(uniqueHeights)) {
height <- heights[i]
nPlayers <- length(heights[heights == height])
totalThrees <- sum(threes[heights == height])
uniqueThrees[i] <- totalThrees / nPlayers
}
plot(uniqueHeights, uniqueThrees, cex=0.3)
plot(1/uniqueHeights, uniqueThrees, cex=0.3)
plot(uniqueHeights, uniqueThrees, cex=0.3)
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$X3PA), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("X3PA")])
}
uniqueHeights <- unique(heights)
uniqueThrees <- rep(0, length(uniqueHeights))
for (i in 1:length(uniqueHeights)) {
height <- heights[i]
nPlayers <- length(heights[heights == height])
totalThrees <- sum(threes[heights == height])
uniqueThrees[i] <- totalThrees / nPlayers
}
plot(uniqueHeights, uniqueThrees, cex=0.3)
plot(uniqueHeights, uniqueThrees, cex=0.5)
years <- 1979:max(ss$Year, na.rm=TRUE)
values <- rep(0, length(years))
for (i in 1:length(years)) {
values[i] <- sum(ss$X3PA[ss$Year == years[i] & !is.na(ss$X3PA)])
}
lm.r <- lm(values ~ years)
plot(years, values, cex=0.5, xlab="Year", ylab="3PA")
abline(lm.r, col="red")
barplot(setNames(values, years))
qqnorm(rstandard(lm.r))
qqline(rstandard(lm.r))
years <- 1979:max(ss$Year, na.rm=TRUE)
values <- rep(0, length(years))
for (i in 1:length(years)) {
values[i] <- sum(ss$X3PA[ss$Year == years[i] & !is.na(ss$X3PA)])
}
lm.r <- lm(values ~ years)
plot(years, values, cex=0.5, xlab="Year", ylab="3PA")
abline(lm.r, col="red")
barplot(setNames(values, years))
qqnorm(rstandard(lm.r))
qqline(rstandard(lm.r))
plot(years, lm.r$fitted.values, cex=0.5, xlab="Year", ylab="3PA")
plot(years, values, cex=0.5, xlab="Year", ylab="3PA")
abline(lm.r, col="red")
plot(years, values, cex=0.5, xlab="Year", ylab="3PA")
abline(lm.r, col="red")
qqnorm(rstandard(lm.r))
qqline(rstandard(lm.r))
plot(years, values, cex=0.5, xlab="Year", ylab="3PA")
abline(lm.r, col="red")
qqnorm(rstandard(lm.r))
qqline(rstandard(lm.r))
plot(years, values, cex=0.5, xlab="Year", ylab="3PA")
abline(lm.r, col="red")
# barplot(setNames(values, years))
lm.r$resid
lm.r$residuals
lm.r$residuals == lm.r$resid
plot(lm.r$residuals)
source("util.r")
players <- read.csv(file="data/players.csv", header=TRUE, sep=",")
df = data.frame(matrix(ncol=length(names(ss)), nrow=0))
names(df) <- names(ss)
for (name in unique(sameNamePlayers$name)) {
nss <- ss[ss$Player == name, ]
maxCurrent <- nss[nss$PTS / nss$G == max(nss$PTS / nss$G, na.rm=TRUE), ]
df <- rbind(df, maxCurrent)
}
df$ppg <- df$PTS / df$G
df[ , c("Player", "G", "Year", "ppg")]
ss[ss$Player == "Kobe Bryant", ]
df[ , c("Player", "G", "Year", "ppg")]
merged <- merge(ss, pl, by.x="Player", by.y="name")
merged <- merged[!(merged$Player %in% sameNamePlayers$name), ]
merged <- merged[!is.na(merged$height) & !is.na(merged$FTA), ]
names <- unique(merged$Player)
heights <- rep(0, length(names))
threes <- rep(0, length(names))
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("FTA")])
}
for (i in 1:length(names)) {
name <- names[i]
heights[i] <- min(merged[merged$Player == name, c("height")])
threes[i] <- sum(merged[merged$Player == name, c("FTA")])
}
uniqueHeights <- unique(heights)
uniqueThrees <- rep(0, length(uniqueHeights))
uniqueThrees <- rep(0, length(uniqueHeights))
for (i in 1:length(uniqueHeights)) {
height <- heights[i]
nPlayers <- length(heights[heights == height])
totalThrees <- sum(threes[heights == height])
uniqueThrees[i] <- totalThrees / nPlayers
}
plot(uniqueHeights, uniqueThrees, cex=0.5)
