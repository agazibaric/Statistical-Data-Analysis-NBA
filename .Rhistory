help
eccccc
clear
data = frame(data())
a = c(2,3,5,7)
a[1:2]
a[2:4]
a[2:5]
a[:]
a[:2]
a[1:]
a[1,2]
a[1,:]
a[4]
b = rep(c(3,1,5),c(4,3,6))
c = seq(from=31,by=-2,length=12)
d = c(b, c)
A = matrix(d, byrow=T)
A[1]
A[2]
A[2:]
A[1:5]
A = matrix(sample(1:5, size = 9, replace = TRUE), byrow = T, nrow = 3)
A
sample
help(sample)
length(A)
sum(A)
colSum(A)
colSums(A)
help(colSums)
I
kasd
msagp
p = c(2,3,4)
class(p)
p = factor(c("a", "b"))
p
class(p)
levels(p)
p
p[1]
p[2]
p[3]
num.vector = c(2100,4200,2100,1000,4200)
num.vector
p = factor(num.vector, labels = c("P", "c", "z"))
p
levels(p)
p = factor(num.vector, labels = c("P", "c", "z"), oredered=T)
p = factor(num.vector, labels = c("P", "c", "z"), ordered=T)
p
iris
help(iris)
levels(iris)
names(iris)
names(iris)
names(iris)
iris$Sepal.Length
iris$Sepal.Length
iris$Species
count.fields(iris)
count.fields(iris$Species)
summary(iris)
head(iris)
dim(iris)
nrow(iris)
ncols(iris)
ncol(iris)
names(iris)
pod.mat = as.matrix(head(iris))
pod.mat
pod.mat
pod.mat$Sepal.Length
pod.mat[1]
class(pod.mat[1])
data.frame(pod.mat)
pod
pod = iris
pod <- iris
pod
pod$novi.stupac = c(1,2,3)
pod
names(pod)
pod$novi.stupac
pod$novi.stupac = NULL
names(pod)
length(pod)
pod
pod[-c(7)]
pod
names(pod)
length(pod)
podË‡[2]
pod[2]
pod[c(2,4)]
pod[2,4]
pod[2]
pod[3,4,5]
pod[2,3,4,5,6]
pod[c(2,5,6), c(3,4)]
pod[2:4]
pod[2:4, 1:2]
pod[2, ]
pod[c(2,5,6), -c(5)]
pod[c(2,5,6), -c(2)]
pod[c(2,5,6), -c(2)]
names(pod)
pod[c(2,5,6), -c(5)]
-c(5)
pod[c(2,5,6), -c(1)]
pod[c(2,5,6), -c(4)]
pod[c(2,5,6), -c(8)]
pod[c(2,5,6), -c(10)]
lv = pod$Sepal.Width > 3.3
lv
pod[lv,]
lv = pod$Sepal.Width > 5.3
pod[lv, 2]
pod[lv,]
lv = pod$Sepal.Width > 4.0
pod[lv, ]
pod[lv, 2]
pod[c(2,5,6), names(pod) != "Species"]
pod[c(2,5,6), names(pod) != "Specie"]
pod[c(2,5,6), names(pod) != "Species"]
pod[c(2,5,6), names(pod)]
pod[c(2,5,6), names(pod)[1]]
names(pod)[3]
pod[c(2,5,6), names(pod) != c("Species", "Sepal.Width"))
pod[c(2,5,6), names(pod) != c("Species", "Sepal.Width")]
pod[c(2,5,6), names(pod) != c("Species", "Sepal.Width")]
pod[c(2,5,6), c("Species", "Petal.Length")]
pod[c(2,5,6), c("Species", "Petal.Length", ordered=T)]
avg
mean(pod$Sepal.Length)
pod$Sepal.Length[pod$Sepal.Length > mean(pod$Sepal.Length)]
length(pod$Sepal.Length[pod$Sepal.Length > mean(pod$Sepal.Length)])
length(pod$Sepal.Length[pod$Sepal.Length < mean(pod$Sepal.Length)])
length(pod$Sepal.Length[pod$Sepal.Length = mean(pod$Sepal.Length)])
length(pod$Sepal.Length[pod$Sepal.Length == mean(pod$Sepal.Length)])
iris
names(iris)
novi = data.frame(iris$Sepal.Length)
novi
class(novi)
novi = data.frame(c(iris$Sepal.Length, iris$Sepal.Width))
novi
class(novi)
names(novi)
novi = data.frame(iris$Sepal.Length, iris$Sepal.Width)
novi
class(novi)
names(novi)
head(novi)
pod = iris
uv1 = iris$Petal.Length > mean(iris$Petal.Length)
uv2 = iris$Petal.Width > mean(iris$Petal.Width)
uv3 = uv1 & uv2
uv3
pod = iris[uv3,]
pod
head(pod)
summary(iris)
pod[7]
pod[7,]
length(pod)
nrow(pod)
pod[7,] = rbind(Petal.Length = 1.0, Petal.Width = 1.5, Species = "setosa")
pod[7,] = rbind(Petal.Length = 1.0, Petal.Width = 1.5, Species = "setosa")
names(pod)
pod2 = pod[,c(3,4,5)]
pod2
names(pod2)
pod2[7,]
pod2[7,] = c(Petal.Length = 1.0, Petal.Width = 1.5, Species = "setosa")
pod2[7,]
pod2[7,] = rbind(Petal.Length = 1.0, Petal.Width = 1.5, Species = "setosa")
pod2[7,]
irisdata = iris
summary(irisdata)
var(irisdata$Sepal.Length)
help(hist)
hist(irisdata$Sepal.Length, breaks=25, main='Sepal length histogram', xlab='Sepal length', ylab='Frequency')
hist(irisdata$Sepal.Length, prob=T, breaks=25, main='Sepal length histogram', xlab='Sepal length', ylab='Frequency')
boxplot(irisdata$Sepal.Length)
boxplot(irisdata[-c(1,2,5)])
plot(irisdata$Sepal.Length)
plot(irisdata$Sepal.Length[irisdata$Species=='setosa'],
irisdata$Sepal.Width[irisdata$Species=='setosa'],col='blue',
xlim=c(min(irisdata$Sepal.Length),max(irisdata$Sepal.Length)),
ylim=c(min(irisdata$Sepal.Width),max(irisdata$Sepal.Width)),
xlab='Sepal length [cm]',ylab='Sepal width [cm]')
exit
quit
clear
help
help()
iris
summary(iris)
as.null(iris)
source('~/Development/R/auditorne/vjezba1/vjezba1.R', echo=TRUE)
iris
iris
help(summary)
histogram(iris)
hist(iris)
hist(iris$Sepal.Length)
help(mean)
# kreiranje vektora naredbom 'c' - samo redom navodimo elemente koje zelimo pohraniti u vektor
a = c(3, 14, 5, 7)
# naredbom 'c' mozemo i vise vektora spojiti u jedan
c = c(a, b)
b = c(1, 2, 3)
# naredbom 'c' mozemo i vise vektora spojiti u jedan
c = c(a, b)
podaci = c(1,2,3,4,2)
class(podaci)
podaci
class(podaci)
podaci[0]
class(1)
as.factor(2)
factor(2,3,4)
p2 = factor("asd", "asd")
p2
class(p2)
p3 = factor(c("asd","sffk"))
p3
class(p3)
p3[1]
p3[0]
p3[3]
remove(p3)
num.vector = c(21,42,21,10,21)
pb = factor(c)
pb
levels(pb)
pb = as.factor(c)
pb = as.factor(pb)
num.vector = c(21,42,21,10,21)
pb = as.factor(num.vector)
pb
pb = factor(num.vector)
pb
mean(pb)
pbr = factor(num.vector, labels=c("a", "b", "c"))
pbr
pbr
levels(pbr)
sls
iris
iris3
# labele se dodjeljuju po redu jedinstvenim vrijednostima iz num.vektor (koje se prvo sortiraju) -- u ovom slucaju 1, 2, 3 --> "PLAVA","CRNA","SMEDJA"
iris
iris
hist(iris$Petal.Length)
hist(iris$Petal.Length, col = "blue")
hist(iris$Petal.Length, col = "red")
boxplot(iris$Sepal.Length)
boxplot(iris$Sepal.Length, col = "green")
box(iris$Sepal.Length)
plot(iris$Species)
plot(iris$Species, col = "red")
count.fields(iris$Species)
count.fields(iris)
plot(iris$Sepal.Length, col = "orange")
nnfnfnfnnfnfnfnnfnfnfnfnfnfnfnfnfnfnfnfnfnnfnfnf
setwd("C:/Users/ante1/Documents/Development/R/Projekt/NBA")
playersData <- read.csv(file="./Data/nba-players-stats/Players.csv", header=TRUE, sep=",")
seasonsStats <- read.csv(file="./Data/nba-players-stats/Seasons_Stats.csv", header=TRUE, sep=",")
head(playersData)
boxplot(playersData$height)
class(playersData$collage)
names(playersData$collage)
levels(playersData$collage)
median(playersData)
median(playersData$collage)
median(as.numeric(playersData$collage))
q = quantile(playersData$height, probs = c(0.25, 0.5, 0.75))
q = quantile(playersData$height, probs = c(0.25, 0.5, 0.75), na.rm = TRUE)
q
IQR(playersData$height, na.rm = TRUE)
i = IQR(playersData$height, na.rm = TRUE)
i
upperLimit = q[3] + 1.5 * 16
upperLimit
q[3]
upperLimit = 206 + 1.6 * 16
upperLimit = 206 + 1.5 * 16
upperLimit
playersData[playersData$height > 230, ]
hp = playersData[playersData$height > 230, ]
hp
q = quantile(playersData$height, probs = c(0.25, 0.5, 0.75), na.rm = TRUE)
i = IQR(playersData$height, na.rm = TRUE)
upperLimit = q[3] + 1.5 * i
lowerLimit = q[1] - 1.5 * i
tallPlayers = playersData[playersData$height > upperLimit, ]
tallPlayers
shortPlayers = playersData[playersData$height < lowerLimit, ]
shortPlayers
lowerLimit
player_data <- read.csv(file="./Data/nba-players-stats/player_data.csv", header=TRUE, sep=",")
head(player_data)
names(player_data)
names(playersData)
head(playersData)
